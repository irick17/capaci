name: capaci
description: "Capaci: 焦る妊活から、賢く待つ妊活へ。精子の時間を知るアプリ。"
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '^3.9.0' # Updated SDK constraint

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  # *** 追加 ***
  flutter_localizations: # Add this line
    sdk: flutter         # Add this line

  # --- V1.1 / V1.2 要件定義書 必須パッケージ ---

  # P0/P1: グラフ表示 (3.1.1)
  syncfusion_flutter_charts: ^31.2.3 # *** バージョンを更新 ***

  # P1/P2: 状態管理 (5.2)
  flutter_riverpod: ^2.6.1
  riverpod_annotation: ^2.6.1 # Updated version

  # P2: 画像メモ (3.3)
  image_picker: ^1.2.0

  # P1/P2: トースト/スナックバー (3.1.2)
  fluttertoast: ^8.2.14

  # 日付フォーマット用 (intl)
  intl: ^0.20.0 # *** バージョン制約を更新 ***

  # --- V1.1 (5.1) データ永続化 ---
  hive: ^2.2.3
  hive_flutter: ^1.1.0
  path_provider: ^2.1.5

  # --- 追加機能パッケージ ---

  # provider の Stream 制御用 (Removed as unused)
  # rxdart: ^0.28.0

  # P2: BBT入力 (シリンダー)
  numberpicker: ^2.1.2

  # P3: 初回コーチマーク
  # showcaseview: ^2.0.3 # Updated version
  showcaseview: ^3.0.0 # Updated to latest compatible version

  # P3: エラーハンドリング
  logger: ^2.6.2

  # P3: カレンダー機能
  table_calendar: ^3.1.3 # Updated version

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^4.0.0

  # Riverpod / Hive のコード生成用
  riverpod_generator: ^2.4.0
  build_runner: ^2.4.13
  hive_generator: ^2.0.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # *** 追加: アセットディレクトリの指定 ***
  assets:
    - assets/fonts/ # フォントディレクトリを指定

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Inter
      fonts:
        - asset: assets/fonts/Inter-Regular.ttf
        - asset: assets/fonts/Inter-Bold.ttf
          weight: 700
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages

